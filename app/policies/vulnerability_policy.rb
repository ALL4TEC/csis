# frozen_string_literal: true

class VulnerabilityPolicy < ApplicationPolicy
  def index?
    staff?
  end

  def burp?
    staff?
  end

  def qualys?
    staff?
  end

  def cve?
    staff?
  end

  def nessus?
    staff?
  end

  def zaproxy?
    staff?
  end

  def cyberwatch?
    staff?
  end

  def show?
    staff?
  end

  class Scope < Scope
    def resolve
      if staff?
        scope.all
      else
        scope.none
      end
    end

    def show_includes
      [{ exploits: :exploit_source }]
    end
  end

  class Headers < ApplicationPolicy::Headers
    private

    def collection_actions
      super_admin? ? %i[import] : []
    end

    def collection_other_actions
      []
    end

    def collection_tabs
      tabs = staff? ? %i[all cve burp nessus qualys zaproxy cyberwatch] : []
      super_admin? ? tabs << :imports : tabs
    end
  end
end
